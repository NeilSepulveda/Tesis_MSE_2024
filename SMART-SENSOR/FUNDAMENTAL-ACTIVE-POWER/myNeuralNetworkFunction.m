function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 26-Nov-2023 20:56:43.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx4 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [214.52;0.36;37.94;0.271167578595938];
x1_step1.gain = [0.0963855421686747;0.111856823266219;0.000551114491279991;2.74636495940555];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.82669159414374981942;1.2871612968424732681;0.79042555712346251884;-0.10970245402948883284;-0.19336494566013409657;1.0354661380152987427;0.30434188881255280767];
IW1_1 = [0.028858826227926997338 -0.15857358066880264391 -0.13686276634362887217 0.25671151081955906337;0.029978036605550251875 -0.029707869802866059689 -0.65152226163734161535 0.42129338897070423009;0.36258214438650776534 -0.83026630679598811824 -1.7443135478810325445 -1.2289992052897495967;-0.020447625938186268779 0.15416763047797629738 0.4921554789555342424 -0.048570878405255757393;0.074095764294290225593 -0.60082793860901673177 0.70773309672398909687 0.60309024995746851605;0.021438918214513505434 -0.09247713051419817476 0.42319190127163314186 0.19902744821594745006;-0.052482508913480385715 0.3187954177242686149 -0.43927798123656652818 -0.42876990199032655182];

% Layer 2
b2 = -0.85415259783822949924;
LW2_1 = [-1.9194974448956154678 -1.1149586164202098804 0.0045332340297022290926 0.42034950266414450315 -0.33261127376744620276 1.120939368055798413 -1.2977783606789246029];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.000551818517925825;
y1_step1.xoffset = 37.94;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
